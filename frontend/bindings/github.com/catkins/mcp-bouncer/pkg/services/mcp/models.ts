// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as time$0 from "../../../../../../time/models.js";

/**
 * ClientStatus represents the status of a client
 */
export class ClientStatus {
    "name": string;
    "connected": boolean;
    "tools": number;
    "last_error"?: string;
    "authorization_required": boolean;
    "oauth_authenticated": boolean;

    /** Creates a new ClientStatus instance. */
    constructor($$source: Partial<ClientStatus> = {}) {
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("connected" in $$source)) {
            this["connected"] = false;
        }
        if (!("tools" in $$source)) {
            this["tools"] = 0;
        }
        if (!("authorization_required" in $$source)) {
            this["authorization_required"] = false;
        }
        if (!("oauth_authenticated" in $$source)) {
            this["oauth_authenticated"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ClientStatus instance from a string or object.
     */
    static createFrom($$source: any = {}): ClientStatus {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ClientStatus($$parsedSource as Partial<ClientStatus>);
    }
}

export class IncomingClient {
    "id": string;
    "name": string;
    "version": string;
    "title"?: string;
    "connected_at": time$0.Time;

    /** Creates a new IncomingClient instance. */
    constructor($$source: Partial<IncomingClient> = {}) {
        if (!("id" in $$source)) {
            this["id"] = "";
        }
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("version" in $$source)) {
            this["version"] = "";
        }
        if (!("connected_at" in $$source)) {
            this["connected_at"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new IncomingClient instance from a string or object.
     */
    static createFrom($$source: any = {}): IncomingClient {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new IncomingClient($$parsedSource as Partial<IncomingClient>);
    }
}
